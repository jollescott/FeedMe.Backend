// <auto-generated />
using FeedMe.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ramsey.NET.Migrations
{
    [DbContext(typeof(RamseyContext))]
    partial class RamseyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Ramsey.Core.Models.RecipeTag", b =>
                {
                    b.Property<int>("RecipeTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecipeId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RecipeTagId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("TagId");

                    b.ToTable("recipeTags", (string)null);
                });

            modelBuilder.Entity("Ramsey.Core.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Locale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("TagId");

                    b.ToTable("tags", (string)null);
                });

            modelBuilder.Entity("Ramsey.NET.Models.BadWord", b =>
                {
                    b.Property<int>("BadWordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Locale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Word")
                        .HasColumnType("TEXT");

                    b.HasKey("BadWordId");

                    b.ToTable("badWords", (string)null);
                });

            modelBuilder.Entity("Ramsey.NET.Models.FailedRecipe", b =>
                {
                    b.Property<int>("FailedRecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("FailedRecipeId");

                    b.ToTable("failedRecipes", (string)null);
                });

            modelBuilder.Entity("Ramsey.NET.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IngredientName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Locale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("IngredientId");

                    b.ToTable("ingredients", (string)null);
                });

            modelBuilder.Entity("Ramsey.NET.Models.IngredientSynonym", b =>
                {
                    b.Property<int>("IngredientSynonymId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Correct")
                        .HasColumnType("TEXT");

                    b.Property<int>("Locale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Wrong")
                        .HasColumnType("TEXT");

                    b.HasKey("IngredientSynonymId");

                    b.ToTable("ingredientSynonyms", (string)null);
                });

            modelBuilder.Entity("Ramsey.NET.Models.RecipeMeta", b =>
                {
                    b.Property<string>("RecipeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<int>("Locale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Owner")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OwnerLogo")
                        .HasColumnType("TEXT");

                    b.Property<double>("Rating")
                        .HasColumnType("REAL");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.HasKey("RecipeId");

                    b.ToTable("recipes", (string)null);
                });

            modelBuilder.Entity("Ramsey.NET.Models.RecipePart", b =>
                {
                    b.Property<int>("RecipePartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<string>("RecipeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.HasKey("RecipePartId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("recipeParts", (string)null);
                });

            modelBuilder.Entity("Ramsey.Core.Models.RecipeTag", b =>
                {
                    b.HasOne("Ramsey.NET.Models.RecipeMeta", "Recipe")
                        .WithMany("RecipeTags")
                        .HasForeignKey("RecipeId");

                    b.HasOne("Ramsey.Core.Models.Tag", "Tag")
                        .WithMany("RecipeTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Ramsey.NET.Models.RecipePart", b =>
                {
                    b.HasOne("Ramsey.NET.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeParts")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ramsey.NET.Models.RecipeMeta", "Recipe")
                        .WithMany("RecipeParts")
                        .HasForeignKey("RecipeId");

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Ramsey.Core.Models.Tag", b =>
                {
                    b.Navigation("RecipeTags");
                });

            modelBuilder.Entity("Ramsey.NET.Models.Ingredient", b =>
                {
                    b.Navigation("RecipeParts");
                });

            modelBuilder.Entity("Ramsey.NET.Models.RecipeMeta", b =>
                {
                    b.Navigation("RecipeParts");

                    b.Navigation("RecipeTags");
                });
#pragma warning restore 612, 618
        }
    }
}
